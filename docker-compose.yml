services:
  iru-db:
    image: postgres:15
    container_name: iru-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - iru_db_data:/var/lib/postgresql/data
    networks:
      - iru-network

  iru-pgadmin:
    image: dpage/pgadmin4
    container_name: iru-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - iru-db
    networks:
      - iru-network

  iru-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: iru-backend
    restart: always
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      NODE_ENV: ${NODE_ENV}
    ports:
      - "${BACKEND_PORT}:8000"
    depends_on:
      - iru-db
    networks:
      - iru-network

  iru-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: iru-frontend
    restart: always
    env_file:
      - ./frontend/.env
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    ports:
      - "${FRONTEND_PORT}:3000"
    healthcheck:
      test: ["CMD", "test", "-f", "/app/dist/index.html"]
      interval: 10s
      timeout: 3s
      retries: 5
    depends_on:
      - iru-backend
    networks:
      - iru-network

volumes:
  iru_db_data:
    name: iru_db_data

networks:
  iru-network:
    name: iru-network
    driver: bridge
